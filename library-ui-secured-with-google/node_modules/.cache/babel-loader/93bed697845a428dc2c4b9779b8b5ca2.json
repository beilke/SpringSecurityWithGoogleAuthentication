{"ast":null,"code":"var _jsxFileName = \"/Users/fernando.beilke/Downloads/blog-master/code/reactjs/library-ui-secured-with-google/src/Book.tsx\";\nimport React, { Component } from 'react';\nimport Alert from './Alert';\nimport AlertType from './AlertType';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Book extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      title: '',\n      selectedAuthorId: '',\n      selectedGenreId: '',\n      authors: [],\n      genres: [],\n      noAuthorsFound: true,\n      noGenresFound: true,\n      bookAddSuccess: false,\n      bookAddFailed: false\n    };\n\n    this.handleSubmit = () => {\n      const BookPayload = {\n        \"title\": this.state.title,\n        \"author\": {\n          \"id\": this.state.selectedAuthorId\n        },\n        \"genre\": {\n          \"id\": this.state.selectedGenreId\n        }\n      };\n      fetch(`${process.env.REACT_APP_REST_API_BASE_NAME}/book`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Authorization': this.props.googleAccessToken\n        },\n        body: JSON.stringify(BookPayload)\n      }).then(response => {\n        if (response.ok) {\n          this.setState({\n            bookAddSuccess: true\n          });\n        } else {\n          this.setState({\n            bookAddFailed: true\n          });\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(`${process.env.REACT_APP_REST_API_BASE_NAME}/genre`, {\n      headers: {\n        'Authorization': this.props.googleAccessToken\n      }\n    }).then(response => response.json()).then(rawGenres => {\n      const genres = rawGenres.map(rawGenre => {\n        return {\n          itemId: rawGenre.id,\n          displayText: rawGenre.name\n        };\n      });\n      this.setState({\n        genres: genres,\n        noGenresFound: genres.length === 0\n      });\n    });\n    fetch(`${process.env.REACT_APP_REST_API_BASE_NAME}/author`, {\n      headers: {\n        'Authorization': this.props.googleAccessToken\n      }\n    }).then(response => response.json()).then(rawAuthors => {\n      const authors = rawAuthors.map(rawAuthor => {\n        return {\n          itemId: rawAuthor.id,\n          displayText: rawAuthor.firstName + ' ' + rawAuthor.lastName\n        };\n      });\n      this.setState({\n        authors: authors,\n        noAuthorsFound: authors.length === 0\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge badge-pill badge-primary align-items-centre\",\n          children: \"Add Book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), this.state.bookAddFailed && /*#__PURE__*/_jsxDEV(Alert, {\n        type: AlertType.ERROR,\n        message: \"Could not save the Book, please try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this), this.state.bookAddSuccess && /*#__PURE__*/_jsxDEV(Alert, {\n        type: AlertType.SUCCESS,\n        message: \"Book saved successfully.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row align-items-start\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"title\",\n              value: this.state.title,\n              onChange: event => {\n                this.setState({\n                  title: event.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row align-items-start\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col form-group\",\n            children: [this.state.noAuthorsFound && /*#__PURE__*/_jsxDEV(Alert, {\n              type: AlertType.ERROR,\n              message: \"No authors found: first add an Author\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"authorId\",\n              children: \"Author\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"custom-select\",\n              id: \"authorId\",\n              onChange: event => {\n                this.setState({\n                  selectedAuthorId: event.target.value\n                });\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"---\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this), this.state.authors.map(author => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: author.itemId,\n                  selected: this.state.selectedAuthorId === author.itemId,\n                  children: author.displayText\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 45\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row align-items-start\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col form-group\",\n            children: [this.state.noGenresFound && /*#__PURE__*/_jsxDEV(Alert, {\n              type: AlertType.ERROR,\n              message: \"No genres found: first add a Genre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"genreId\",\n              children: \"Genre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"custom-select\",\n              id: \"genreId\",\n              onChange: event => {\n                this.setState({\n                  selectedGenreId: event.target.value\n                });\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"---\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this), this.state.genres.map(genre => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: genre.itemId,\n                  selected: this.state.selectedGenreId === genre.itemId,\n                  children: genre.displayText\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 45\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: this.state.selectedAuthorId === '' || this.state.selectedGenreId === '',\n          className: \"btn btn-primary\",\n          onClick: this.handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Book;","map":{"version":3,"sources":["/Users/fernando.beilke/Downloads/blog-master/code/reactjs/library-ui-secured-with-google/src/Book.tsx"],"names":["React","Component","Alert","AlertType","Book","state","title","selectedAuthorId","selectedGenreId","authors","genres","noAuthorsFound","noGenresFound","bookAddSuccess","bookAddFailed","handleSubmit","BookPayload","fetch","process","env","REACT_APP_REST_API_BASE_NAME","method","headers","props","googleAccessToken","body","JSON","stringify","then","response","ok","setState","componentDidMount","json","rawGenres","map","rawGenre","itemId","id","displayText","name","length","rawAuthors","rawAuthor","firstName","lastName","render","ERROR","SUCCESS","event","target","value","author","genre"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Alert from './Alert';\nimport AlertType from './AlertType';\n\ninterface BookProps {\n    googleAccessToken: string\n}\n\ninterface BookState {\n    title: string,\n    selectedAuthorId: string,\n    selectedGenreId: string,\n    authors: ComboBoxItemValue[],\n    genres: ComboBoxItemValue[],\n    noAuthorsFound: boolean,\n    noGenresFound: boolean,\n    bookAddSuccess: boolean,\n    bookAddFailed: boolean\n}\n\ninterface ComboBoxItemValue {\n    itemId: string,\n    displayText: string\n}\n\nclass Book extends Component<BookProps, BookState> {\n\n    state: BookState = {\n        title: '',\n        selectedAuthorId: '',\n        selectedGenreId: '',\n        authors: [],\n        genres: [],\n        noAuthorsFound: true,\n        noGenresFound: true,\n        bookAddSuccess: false,\n        bookAddFailed: false\n    };\n\n    componentDidMount() {\n        fetch(`${process.env.REACT_APP_REST_API_BASE_NAME}/genre`, {\n            headers: {\n                'Authorization': this.props.googleAccessToken\n            }\n        }).then(response => response.json())\n            .then(rawGenres => {\n                const genres: ComboBoxItemValue[] = rawGenres.map((rawGenre: any) => {\n                    return {\n                        itemId: rawGenre.id,\n                        displayText: rawGenre.name\n                    } as ComboBoxItemValue;\n                });\n\n                this.setState({\n                    genres: genres,\n                    noGenresFound: genres.length === 0\n                });\n            });\n\n        fetch(`${process.env.REACT_APP_REST_API_BASE_NAME}/author`, {\n            headers: {\n                'Authorization': this.props.googleAccessToken\n            }\n        }).then(response => response.json())\n            .then(rawAuthors => {\n                const authors: ComboBoxItemValue[] = rawAuthors.map((rawAuthor: any) => {\n                    return {\n                        itemId: rawAuthor.id,\n                        displayText: rawAuthor.firstName + ' ' + rawAuthor.lastName\n                    } as ComboBoxItemValue;\n                });\n\n                this.setState({\n                    authors: authors,\n                    noAuthorsFound: authors.length === 0\n                });\n            });\n\n    }\n\n    handleSubmit = () => {\n        const BookPayload = {\n            \"title\": this.state.title,\n            \"author\": {\n                \"id\": this.state.selectedAuthorId\n            },\n            \"genre\": {\n                \"id\": this.state.selectedGenreId\n            }\n        };\n        fetch(`${process.env.REACT_APP_REST_API_BASE_NAME}/book`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': this.props.googleAccessToken\n            },\n            body: JSON.stringify(BookPayload)\n        }).then(response => {\n            if (response.ok) {\n                this.setState({ bookAddSuccess: true });\n            } else {\n                this.setState({ bookAddFailed: true });\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h1><span className=\"badge badge-pill badge-primary align-items-centre\">Add Book</span></h1>\n                {\n                    this.state.bookAddFailed &&\n                    <Alert type={AlertType.ERROR} message='Could not save the Book, please try again.' />\n                }\n                {\n                    this.state.bookAddSuccess &&\n                    <Alert type={AlertType.SUCCESS} message='Book saved successfully.' />\n                }\n                <div className=\"container\">\n                    <div className=\"row align-items-start\">\n                        <div className=\"col form-group\">\n                            <label htmlFor=\"title\">Title</label>\n                            <input type=\"text\" className=\"form-control\" id=\"title\" value={this.state.title} onChange={(event) => { this.setState({ title: event.target.value }); }} />\n                        </div>\n                    </div>\n                    <div className=\"row align-items-start\">\n                        <div className=\"col form-group\">\n                            {this.state.noAuthorsFound &&\n                                <Alert type={AlertType.ERROR} message='No authors found: first add an Author' />\n                            }\n                            <label htmlFor=\"authorId\">Author</label>\n                            <select className=\"custom-select\" id=\"authorId\" onChange={(event) => { this.setState({ selectedAuthorId: event.target.value }); }} >\n                                <option value=''>---</option>\n                                {\n                                    this.state.authors.map((author: ComboBoxItemValue) => {\n                                        return (\n                                            <option value={author.itemId} selected={this.state.selectedAuthorId === author.itemId}>{author.displayText}</option>\n                                        );\n                                    })\n                                }\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"row align-items-start\">\n                        <div className=\"col form-group\">\n                            {this.state.noGenresFound &&\n                                <Alert type={AlertType.ERROR} message='No genres found: first add a Genre' />\n                            }\n                            <label htmlFor=\"genreId\">Genre</label>\n                            <select className=\"custom-select\" id=\"genreId\" onChange={(event) => { this.setState({ selectedGenreId: event.target.value }); }} >\n                                <option value=''>---</option>\n                                {\n                                    this.state.genres.map((genre: ComboBoxItemValue) => {\n                                        return (\n                                            <option value={genre.itemId} selected={this.state.selectedGenreId === genre.itemId}>{genre.displayText}</option>\n                                        );\n                                    })\n                                }\n                            </select>\n                        </div>\n                    </div>\n                    <button type=\"button\" disabled={this.state.selectedAuthorId === '' || this.state.selectedGenreId === ''} className=\"btn btn-primary\" onClick={this.handleSubmit}>Submit</button>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Book;\n"]},"metadata":{},"sourceType":"module"}