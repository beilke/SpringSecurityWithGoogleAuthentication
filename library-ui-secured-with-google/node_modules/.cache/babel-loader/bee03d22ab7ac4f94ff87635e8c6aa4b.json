{"ast":null,"code":"var _jsxFileName = \"/Users/fernando.beilke/Downloads/blog-master/code/reactjs/library-ui-secured-with-google/src/GoogleSignInComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport Alert from './Alert';\nimport AlertType from './AlertType';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GoogleSignInComponent = _ref => {\n  _s();\n\n  let {\n    loginSuccess\n  } = _ref;\n  const [loginFailed, setLoginFailed] = useState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"h3 mb-3 font-weight-normal\",\n      children: \"Welcome to Library Portal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), loginFailed && /*#__PURE__*/_jsxDEV(Alert, {\n      message: \"Could not sign you in! Try again.\",\n      type: AlertType.ERROR\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: `${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`,\n      buttonText: \"Google\",\n      onSuccess: loginSuccess,\n      onFailure: response => {\n        setLoginFailed(true);\n      },\n      cookiePolicy: 'single_host_origin',\n      responseType: \"code,token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GoogleSignInComponent, \"hD4Aq5pOXxbG2EDS7hmbI5uc6ww=\");\n\n_c = GoogleSignInComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleSignInComponent\");","map":{"version":3,"sources":["/Users/fernando.beilke/Downloads/blog-master/code/reactjs/library-ui-secured-with-google/src/GoogleSignInComponent.tsx"],"names":["React","useState","GoogleLogin","Alert","AlertType","GoogleSignInComponent","loginSuccess","loginFailed","setLoginFailed","ERROR","process","env","REACT_APP_GOOGLE_AUTH_CLIENT_ID","response"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,WAAT,QAA6E,oBAA7E;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAMA,OAAO,MAAMC,qBAAoE,GAAG,QAAsB;AAAA;;AAAA,MAArB;AAAEC,IAAAA;AAAF,GAAqB;AAExG,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,EAA9C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGM,WAAW,iBACV,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC,mCAAf;AAAmD,MAAA,IAAI,EAAEH,SAAS,CAACK;AAAnE;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,WAAD;AACE,MAAA,QAAQ,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,+BAAgC,EAD3D;AAEE,MAAA,UAAU,EAAC,QAFb;AAGE,MAAA,SAAS,EAAEN,YAHb;AAIE,MAAA,SAAS,EAAGO,QAAD,IAAmB;AAC5BL,QAAAA,cAAc,CAAC,IAAD,CAAd;AACD,OANH;AAOE,MAAA,YAAY,EAAE,oBAPhB;AAQE,MAAA,YAAY,EAAC;AARf;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAvBM;;GAAMH,qB;;KAAAA,qB","sourcesContent":["import React, { FunctionComponent, useState } from 'react'\nimport { GoogleLogin, GoogleLoginResponse, GoogleLoginResponseOffline } from 'react-google-login';\nimport Alert from './Alert';\nimport AlertType from './AlertType';\n\ninterface GoogleSignInComponentProps {\n  loginSuccess: (response: GoogleLoginResponse | GoogleLoginResponseOffline) => void;\n}\n\nexport const GoogleSignInComponent: FunctionComponent<GoogleSignInComponentProps> = ({ loginSuccess }) => {\n\n  const [loginFailed, setLoginFailed] = useState<boolean>();\n\n  return (\n    <div className=\"text-center mb-4\">\n      <h1 className=\"h3 mb-3 font-weight-normal\">Welcome to Library Portal</h1>\n      {loginFailed &&\n        <Alert message=\"Could not sign you in! Try again.\" type={AlertType.ERROR} />\n      }\n      <p>Sign In</p>\n      <GoogleLogin\n        clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n        buttonText='Google'\n        onSuccess={loginSuccess}\n        onFailure={(response: any) => {\n          setLoginFailed(true);\n        }}\n        cookiePolicy={'single_host_origin'}\n        responseType='code,token'\n      />\n    </div>\n  )\n};\n"]},"metadata":{},"sourceType":"module"}