{"ast":null,"code":"var _jsxFileName = \"/Users/fernando.beilke/Downloads/blog-master/code/reactjs/library-ui-secured-with-google/src/Genre.tsx\";\nimport React, { Component } from 'react';\nimport Alert from './Alert';\nimport AlertType from './AlertType';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Genre extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      shortName: '',\n      genreAddSuccess: false,\n      genreAddFailed: false\n    };\n\n    this.handleSubmit = () => {\n      const GenrePayload = {\n        \"name\": this.state.name,\n        \"shortName\": this.state.shortName\n      };\n      fetch(`${process.env.REACT_APP_REST_API_BASE_NAME}/genre`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Authorization': this.props.googleAccessToken\n        },\n        body: JSON.stringify(GenrePayload)\n      }).then(response => {\n        if (response.ok) {\n          this.setState({\n            genreAddSuccess: true\n          });\n        } else {\n          this.setState({\n            genreAddFailed: true\n          });\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge badge-pill badge-primary align-items-centre\",\n          children: \"Add Genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), this.state.genreAddFailed && /*#__PURE__*/_jsxDEV(Alert, {\n        type: AlertType.ERROR,\n        message: \"Could not save the Genre, please try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), this.state.genreAddSuccess && /*#__PURE__*/_jsxDEV(Alert, {\n        type: AlertType.SUCCESS,\n        message: \"Genre saved successfully.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row align-items-start\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"name\",\n              value: this.state.name,\n              onChange: event => {\n                this.setState({\n                  name: event.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row align-items-start\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"shortName\",\n              children: \"Short name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"lastName\",\n              value: this.state.shortName,\n              onChange: event => {\n                this.setState({\n                  shortName: event.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          onClick: this.handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Genre;","map":{"version":3,"sources":["/Users/fernando.beilke/Downloads/blog-master/code/reactjs/library-ui-secured-with-google/src/Genre.tsx"],"names":["React","Component","Alert","AlertType","Genre","state","name","shortName","genreAddSuccess","genreAddFailed","handleSubmit","GenrePayload","fetch","process","env","REACT_APP_REST_API_BASE_NAME","method","headers","props","googleAccessToken","body","JSON","stringify","then","response","ok","setState","render","ERROR","SUCCESS","event","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Alert from './Alert';\nimport AlertType from './AlertType';\n\ninterface GenreProps {\n    googleAccessToken: string\n}\n\ninterface GenreState {\n    name: string,\n    shortName: string,\n    genreAddSuccess: boolean,\n    genreAddFailed: boolean\n}\n\nclass Genre extends Component<GenreProps, GenreState> {\n\n    state: GenreState = {\n        name: '',\n        shortName: '',\n        genreAddSuccess: false,\n        genreAddFailed: false\n    };\n\n    handleSubmit = () => {\n        const GenrePayload = {\n            \"name\": this.state.name,\n            \"shortName\": this.state.shortName,\n        };\n        fetch(`${process.env.REACT_APP_REST_API_BASE_NAME}/genre`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': this.props.googleAccessToken\n            },\n            body: JSON.stringify(GenrePayload)\n        }).then(response => {\n            if (response.ok) {\n                this.setState({genreAddSuccess: true});\n            } else {\n                this.setState({genreAddFailed: true});\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h1><span className=\"badge badge-pill badge-primary align-items-centre\">Add Genre</span></h1>\n                {\n                    this.state.genreAddFailed &&\n                    <Alert type={AlertType.ERROR} message='Could not save the Genre, please try again.'/>\n                }\n                {\n                    this.state.genreAddSuccess &&\n                    <Alert type={AlertType.SUCCESS} message='Genre saved successfully.'/>\n                }\n                <div className=\"container\">\n                    <div className=\"row align-items-start\">\n                        <div className=\"col form-group\">\n                            <label htmlFor=\"name\">Name</label>\n                            <input type=\"text\" className=\"form-control\" id=\"name\" value={this.state.name} onChange={(event) => { this.setState({ name: event.target.value }); }} />\n                        </div>\n                    </div>\n                    <div className=\"row align-items-start\">\n                        <div className=\"col form-group\">\n                            <label htmlFor=\"shortName\">Short name</label>\n                            <input type=\"text\" className=\"form-control\" id=\"lastName\" value={this.state.shortName} onChange={(event) => { this.setState({ shortName: event.target.value }); }} />\n                        </div>\n                    </div>                    \n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleSubmit}>Submit</button>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Genre;\n"]},"metadata":{},"sourceType":"module"}